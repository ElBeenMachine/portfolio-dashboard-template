# Update the version of the project
update_version:
    stage: version
    before_script: []
    script:
        - labels=$(echo "$CI_MERGE_REQUEST_LABELS")
        - if [[ $labels =~ "patch" ]]; then
          npm version patch
          elif [[ $labels =~ "minor" ]]; then
          npm version minor
          elif [[ $labels =~ "major" ]]; then
          npm version major
          else
          echo "No valid version label found. Exiting."
          exit 1
          fi
    only:
        - merge_requests
        - production
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
        - changes:
              - src/**/*
              - public/**/*
              - Dockerfile
              - package.json
              - package-lock.json

# Get the version tag for the job
get_version:
    stage: version
    image: $NODE_IMAGE
    script:
        - export TAG=$(node -p "require('./package.json').version")
        - echo "TAG=$TAG" >> variables.env
    before_script: []
    services: []
    artifacts:
        reports:
            dotenv: variables.env
    only:
        - production
