name: CI - Release

on:
    push:
        branches: [production]

jobs:
    get_project_version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_project_version.outputs.version }}
        steps:
            - uses: actions/checkout@v3

            - name: Get the most recent tag
              id: get_project_version
              run: |
                  git fetch --tags
                  VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
                  echo "version=$VERSION" >> $GITHUB_ENV
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

    create_release:
        name: Create Release
        runs-on: ubuntu-latest
        needs: get_project_version
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Create Release Notes
              id: create_release_notes
              run: |
                  export VERSION=${{ needs.get_project_version.outputs.version }}
                  echo "Generating release notes for version $VERSION"
                  echo "# Changelog for version $VERSION" > release.md
                  git log --oneline $(git describe --tags --abbrev=0 || git rev-list --max-parents=0 HEAD)...HEAD | tr '\n' '\7' | sed 's/\x7/\n\n/g' >> release.md
                  echo "Release notes:"
                  cat release.md
                  echo "::set-output name=release_notes::$(cat release.md)"

            - name: Create Release
              id: create_release
              uses: comnoco/create-release-action@v2.0.5
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ needs.get_project_version.outputs.version }}
                  release_name: Version ${{ needs.get_project_version.outputs.version }}
                  body: ${{ steps.create_release_notes.outputs.release_notes }}
                  draft: false
                  prerelease: false
